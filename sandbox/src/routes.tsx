import { createBrowserRouter, Navigate } from "react-router-dom";
import { useAuth } from "../src/context/AuthContext"; // ‚úÖ –î–æ–±–∞–≤–∏–ª `useAuth`
import MainLayout from "./layouts/MainLayout";
import ProtectedRoute from "../src/ProtectedRoute"; // ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º –∑–∞—â–∏—Ç—É –º–∞—Ä—à—Ä—É—Ç–æ–≤

import AdminUsers from "./pages/AdminUsers";
import UserEdit from "./pages/UserEdit";
import Login from "./pages/Auth/Login";
import Dashboard from "./pages/Dashboard";
import Register from "./pages/Auth/Register";
import CountryList from "./pages/CountryList";
import CountryForm from "./pages/CountryForm";
import CityList from "./pages/CityList";
import CityForm from "./pages/CityForm";
import CategoryGroupList from "./pages/CategoryGroupList";
import CategoryGroupForm from "./pages/CategoryGroupForm";
import CategoryList from "./pages/CategoryList";
import CategoryForm from "./pages/CategoryForm";
import SubCategoryList from "./pages/SubCategoryList";
import SubCategoryForm from "./pages/SubCategoryForm";
import AttributeList from "./pages/AttributesList";
import CreateAttributePage from "./pages/CreateAttributePage.tsx";
import EditAttributePage from "./pages/EditAttributePage";
import AttributeValuesPage from "./pages/AttributeValuesPage";
import ProductList from "./pages/ProductList";
import ProductForm from "./pages/ProductForm";
import ProductAttributesForm from "./pages/ProductAttributesForm";
import ProfileForm from "./pages/ProfileForm";
import AddressManager from "./pages/AddressManager";
import AddressForm from "./pages/AddressForm";
import AttributeFormPage from "./pages/AttributeFormPage.tsx";
import AttributeValueList from "./pages/AttributeValueList.tsx";
import CityMapPage from "./pages/CityMapPage.tsx";
import AddressMapPage from "./pages/AddressMapPage.tsx";

// ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ 404
const NotFound = () => (
  <div className="flex flex-col items-center justify-center min-h-screen text-gray-600">
    <h1 className="text-3xl font-bold">404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
    <p className="text-lg mt-2">
      –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞{" "}
      <a href="/" className="text-blue-500">
        –≥–ª–∞–≤–Ω—É—é
      </a>
      .
    </p>
  </div>
);

const router = createBrowserRouter([
  {
    path: "/",
    element: <MainLayout />, // üìå –û—Å–Ω–æ–≤–Ω–æ–π layout
    children: [
      { index: true, element: <Navigate to="/dashboard" /> },
      // ‚úÖ –û—Ç–∫—Ä—ã—Ç—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã (–Ω–µ —Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
      { path: "login", element: <Login /> },
      { path: "register", element: <Register /> },

      // ‚úÖ –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
      {
        path: "/",
        element: <ProtectedRoute />, // üîí –ó–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤
        children: [
          { path: "dashboard", element: <Dashboard /> },
          { path: "admin/users", element: <AdminUsers /> },
          { path: "admin/users/edit/:id", element: <UserEdit /> },

          // ‚úÖ –°—Ç—Ä–∞–Ω—ã
          { path: "mod/countries", element: <CountryList /> },
          { path: "mod/countries/new", element: <CountryForm /> },
          {
            path: "mod/countries/edit/:countryCode",
            element: <CountryForm isEditMode={true} />,
          },

          // ‚úÖ –ì–æ—Ä–æ–¥–∞
          { path: "mod/cities", element: <CityList /> },
          { path: "mod/cities/new", element: <CityForm /> },
          {
            path: "mod/cities/edit/:cityCode",
            element: <CityForm isEditMode={true} />,
          },
          { path: "mod/cities/map/:cityCode", element: <CityMapPage /> },

          




          // ‚úÖ –ì—Ä—É–ø–ø—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
          { path: "mod/category-groups", element: <CategoryGroupList /> },
          { path: "mod/category-groups/new", element: <CategoryGroupForm /> },
          {
            path: "mod/category-groups/edit/:code",
            element: <CategoryGroupForm isEditMode={true} />,
          },

          // ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
          { path: "mod/categories/:parentCode?", element: <CategoryList /> },
          { path: "mod/categories/new", element: <CategoryForm /> },
          {
            path: "mod/categories/edit/:code",
            element: <CategoryForm isEditMode={true} />,
          },

          // ‚úÖ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
          {
            path: "mod/sub-categories/:parentCode?",
            element: <SubCategoryList />,
          },
          { path: "mod/sub-categories/new", element: <SubCategoryForm /> },
          {
            path: "mod/sub-categories/edit/:code",
            element: <SubCategoryForm isEditMode={true} />,
          },

          // ‚úÖ –ê—Ç—Ä–∏–±—É—Ç—ã
          { path: "mod/attributes", element: <AttributeList /> },
          { path: "mod/attributes/new", element: <AttributeFormPage /> },
          { path: "mod/attributes/:id/edit", element: <AttributeFormPage /> },
           
          {
            path: "mod/attributes/:attributeId/values", element: <AttributeValueList />,
          },

          // ‚úÖ –¢–æ–≤–∞—Ä—ã
          { path: "mod/products", element: <ProductList /> },
          { path: "mod/products/new", element: <ProductForm /> }, // ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
          { path: "mod/products/edit/:id", element: <ProductForm /> }, // ‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
          {
            path: "mod/products/:productId/attributes",
            element: <ProductAttributesForm />,
          }, // ‚úÖ –ê—Ç—Ä–∏–±—É—Ç—ã —Ç–æ–≤–∞—Ä–∞

          { path: "guser/profile", element: <ProfileForm /> },
          { path: "guser/addresses", element: <AddressManager /> },
          { path: "guser/addresses/new", element: <AddressForm /> }, // ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
          { path: "guser/addresses/edit/:id", element: <AddressForm /> }, // ‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
          { path: "guser/address/:addressId/map", element: <AddressMapPage /> }, // ‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞




        ],
      },

      // ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ 404 –æ—à–∏–±–æ–∫
      { path: "*", element: <NotFound /> },
    ],
  },
]);

export default router;
