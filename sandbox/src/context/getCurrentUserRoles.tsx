// üìå –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º apiClient
import apiClient from "../apidata/apiClient";

// –¢–∏–ø —Ä–æ–ª–µ–π
type Role = "ROLE_USER" | "ROLE_ADMIN" | "ROLE_MODERATOR" | "ROLE_INSPECTOR";

// üîπ –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
apiClient.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    console.log("–ø–µ—Ä–µ–¥–∞—á–∞ —Ç–æ–∫–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", token); // üî• –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

export const getCurrentUserRoles = async (): Promise<Role[]> => {
  try {
    const response = await apiClient.get("/api/auth/me"); // ‚ö° –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data); // üî• –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    return response.data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π:", error);
    return [];
  }
};
