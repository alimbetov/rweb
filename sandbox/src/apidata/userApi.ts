import apiClient from "../apidata/apiClient";

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface UserDto {
  id: number;
  username: string;
  roles: string[];
  blockState: string;
}

// === –í—ã–∑–æ–≤—ã API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===

// üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const fetchUsers = async (): Promise<UserDto[]> => {
  const response = await apiClient.get("/api/admin/users");
  return response.data;
};

// üîπ –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∏–º–µ–Ω–∏
export const searchUsers = async (query: string): Promise<UserDto[]> => {
  const response = await apiClient.get("/api/admin/users/search", {
    params: { query },
  });
  return response.data;
};

// üîπ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
export const fetchUser = async (id: number): Promise<UserDto> => {
  const response = await apiClient.get(`/api/admin/users/${id}`);
  return response.data;
};

// üîπ –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const createUser = async (user: UserDto): Promise<UserDto> => {
  const response = await apiClient.post("/api/admin/users", user);
  return response.data;
};

// üîπ –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const updateUser = async (user: UserDto): Promise<UserDto> => {
  const response = await apiClient.put(`/api/admin/users/${user.id}`, user);
  return response.data;
};

// üîπ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const deleteUser = async (id: number): Promise<void> => {
  await apiClient.delete(`/api/admin/users/${id}`);
};

// üîπ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π
export const fetchRoles = async (): Promise<string[]> => {
  const response = await apiClient.get("/api/admin/users/roles");
  return response.data;
};
