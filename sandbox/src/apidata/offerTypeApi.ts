import apiClient from "./apiClient";
import { AxiosResponse } from "axios";

export interface DeliveryTypeDTO {
  code: string;
  name: string;
}

export interface PaymentTypeDTO {
  code: string;
  name: string;
}

/**
 * üöö –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ offerId
 * @param offerId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ñ—Ñ–µ—Ä–∞
 * @param exists true ‚Äî —Ç–æ–ª—å–∫–æ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ; false ‚Äî —Ç–æ–ª—å–∫–æ –µ—â—ë –¥–æ—Å—Ç—É–ø–Ω—ã–µ
 */
export const fetchDeliveryTypes = async (
  offerId: number,
  exists: boolean
): Promise<DeliveryTypeDTO[]> => {
  const response: AxiosResponse<DeliveryTypeDTO[]> = await apiClient.get(
    "/api/offer-types/delivery",
    {
      params: { offerId, exists },
    }
  );
  return response.data;
};

/**
 * üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ offerId
 */
export const saveDeliveryTypes = async (
  offerId: number,
  types: DeliveryTypeDTO[]
): Promise<void> => {
  await apiClient.put("/api/offer-types/delivery", types, {
    params: { offerId },
  });
};

/**
 * üí≥ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –æ–ø–ª–∞—Ç—ã –ø–æ offerId
 * @param offerId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ñ—Ñ–µ—Ä–∞
 * @param exists true ‚Äî —Ç–æ–ª—å–∫–æ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ; false ‚Äî —Ç–æ–ª—å–∫–æ –µ—â—ë –¥–æ—Å—Ç—É–ø–Ω—ã–µ
 */
export const fetchPaymentTypes = async (
  offerId: number,
  exists: boolean
): Promise<PaymentTypeDTO[]> => {
  const response: AxiosResponse<PaymentTypeDTO[]> = await apiClient.get(
    "/api/offer-types/payment",
    {
      params: { offerId, exists },
    }
  );
  return response.data;
};

/**
 * üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã –æ–ø–ª–∞—Ç—ã –ø–æ offerId
 */
export const savePaymentTypes = async (
  offerId: number,
  types: PaymentTypeDTO[]
): Promise<void> => {
  await apiClient.put("/api/offer-types/payment", types, {
    params: { offerId },
  });
};
