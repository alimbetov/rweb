import apiClient from "../apidata/apiClient";
import {
  ProfileDTO,
  PhoneContactDTO,
  AddressDTO,
  LanguageDTO,
  CurrencyDTO,
  CityLocalDto,
  AddressCoordinatesDTO,
  CountryLocalDto,
} from "../types/types";

// üîπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization
apiClient.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// ========================== üìå –ü—Ä–æ—Ñ–∏–ª—å ==========================

// üîπ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const fetchUserProfile = async (): Promise<ProfileDTO> => {
  const response = await apiClient.get("/api/profile");
  return response.data;
};

// üîπ –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const updateUserProfile = async (
  profile: ProfileDTO
): Promise<ProfileDTO> => {
  const response = await apiClient.put("/api/profile", profile);
  return response.data;
};

// ========================== üåê –Ø–∑—ã–∫–∏ –∏ –í–∞–ª—é—Ç—ã ==========================

// üîπ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤
export const fetchLanguages = async (): Promise<LanguageDTO[]> => {
  const response = await apiClient.get("/api/profile/languages");
  return response.data;
};

// üîπ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç
export const fetchCurrencies = async (): Promise<CurrencyDTO[]> => {
  const response = await apiClient.get("/api/profile/currencies");
  return response.data;
};

// ========================== üìû –¢–µ–ª–µ—Ñ–æ–Ω—ã ==========================

// üîπ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const fetchUserPhones = async (): Promise<PhoneContactDTO[]> => {
  const response = await apiClient.get("/api/profile/phones");
  return response.data;
};

// üîπ –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω
export const addUserPhone = async (
  phone: PhoneContactDTO
): Promise<PhoneContactDTO> => {
  const response = await apiClient.post("/api/profile/phones", phone);
  return response.data;
};

// üîπ –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω
export const updateUserPhone = async (
  id: number,
  phone: PhoneContactDTO
): Promise<PhoneContactDTO> => {
  const response = await apiClient.put(`/api/profile/phones/${id}`, phone);
  return response.data;
};

// üîπ –£–¥–∞–ª–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω
export const deleteUserPhone = async (id: number): Promise<void> => {
  await apiClient.delete(`/api/profile/phones/${id}`);
};

// ========================== üè† –ê–¥—Ä–µ—Å–∞ ==========================

// üîπ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤
export const fetchUserAddresses = async (): Promise<AddressDTO[]> => {
  const response = await apiClient.get("/api/profile/addresses");
  return response.data;
};

// üîπ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤
export const fetchCities = async (): Promise<CityLocalDto[]> => {
  const response = await apiClient.get("/api/profile/cities");
  return response.data;
};

export const fetchCountries = async (): Promise<CountryLocalDto[]> => {
  const response = await apiClient.get("/api/profile/countries");
  return response.data;
};


// üîπ –î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å
export const addUserAddress = async (
  address: AddressDTO
): Promise<AddressDTO> => {
  const response = await apiClient.post("/api/profile/addresses", address);
  return response.data;
};

// üîπ –û–±–Ω–æ–≤–∏—Ç—å –∞–¥—Ä–µ—Å
export const updateUserAddress = async (
  id: number,
  address: AddressDTO
): Promise<AddressDTO> => {
  const response = await apiClient.put(`/api/profile/addresses/${id}`, address);
  return response.data;
};

// üîπ –£–¥–∞–ª–∏—Ç—å –∞–¥—Ä–µ—Å
export const deleteUserAddress = async (id: number): Promise<void> => {
  await apiClient.delete(`/api/profile/addresses/${id}`);
};



// ========================== üß≠ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–¥—Ä–µ—Å–æ–≤ ==========================


// üîπ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–¥—Ä–µ—Å–∞
export const fetchAddressCoordinates = async (
  addressId: number
): Promise<AddressCoordinatesDTO> => {
  const response = await apiClient.get(`/api/profile/address/${addressId}/coordinates`);
  return response.data;
};

// üîπ –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–¥—Ä–µ—Å–∞
export const updateAddressCoordinates = async (
  addressId: number,
  latitude: number,
  longitude: number
): Promise<void> => {
  await apiClient.put(`/api/profile/address/${addressId}/coordinates`, null, {
    params: {
      latitude,
      longitude,
    },
  });
};

// üîπ –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–¥—Ä–µ—Å–∞
export const clearAddressCoordinates = async (addressId: number): Promise<void> => {
  await apiClient.delete(`/api/profile/address/${addressId}/coordinates`);
};
