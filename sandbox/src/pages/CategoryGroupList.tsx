import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import {
  fetchCategoryGroups,
  deleteCategoryGroup,
  searchCategoryGroups,
} from "../apidata/goodApi";
import { CategoryGroup } from "../types/types";

const CategoryGroupList: React.FC = () => {
  const [categoryGroups, setCategoryGroups] = useState<CategoryGroup[]>([]);
  const [searchQuery, setSearchQuery] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    loadCategoryGroups();
  }, []);

  const loadCategoryGroups = async () => {
    try {
      const data = await fetchCategoryGroups();
      setCategoryGroups(data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–π:", error);
    }
  };

  const handleEdit = (code: string) => {
    navigate(`/mod/category-groups/edit/${code}`);
  };

  const handleForChildrenViewEdit = (code: string) => {
    navigate(`/mod/categories/${code}`); // ‚úÖ –¢–µ–ø–µ—Ä—å –∫–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
  };

  const handleDelete = async (code: string) => {
    if (window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –≥—Ä—É–ø–ø—É?")) {
      try {
        await deleteCategoryGroup(code);
        loadCategoryGroups();
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error);
      }
    }
  };

  const handleSearch = async () => {
    if (searchQuery.trim() === "") {
      loadCategoryGroups();
    } else {
      try {
        const results = await searchCategoryGroups(searchQuery);
        setCategoryGroups(results);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:", error);
      }
    }
  };

  return (
    <div className="p-4">
      <h1 className="text-2xl font-bold mb-4">–ì—Ä—É–ø–ø—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π</h1>

      {/* –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ */}
      <div className="mb-4 flex">
        <input
          type="text"
          placeholder="–ü–æ–∏—Å–∫ –ø–æ –∫–æ–¥—É –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="px-4 py-2 border rounded w-full"
        />
        <button
          onClick={handleSearch}
          className="ml-2 px-4 py-2 bg-blue-500 text-white rounded"
        >
          üîç –ò—Å–∫–∞—Ç—å
        </button>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å" */}
      <button
        onClick={() => navigate("/mod/category-groups/new")}
        className="mb-4 px-4 py-2 bg-green-500 text-white rounded"
      >
        ‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É
      </button>

      {/* –¢–∞–±–ª–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
      <table className="min-w-full bg-white shadow-md rounded">
        <thead>
          <tr className="bg-gray-200">
            <th className="py-2 px-4">–ö–æ–¥</th>
            <th className="py-2 px-4">–ù–∞–∑–≤–∞–Ω–∏–µ (RU)</th>
            <th className="py-2 px-4">–ù–∞–∑–≤–∞–Ω–∏–µ (KZ)</th>
            <th className="py-2 px-4">–ù–∞–∑–≤–∞–Ω–∏–µ (EN)</th>
            <th className="py-2 px-4">–ü—É–±–ª–∏—á–Ω–∞—è</th>
            <th className="py-2 px-4">–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          {categoryGroups.map((group) => (
            <tr key={group.code} className="border-t">
              <td className="border px-4 py-2">{group.code}</td>
              <td className="border px-4 py-2">{group.nameRu}</td>
              <td className="border px-4 py-2">{group.nameKz}</td>
              <td className="border px-4 py-2">{group.nameEn}</td>
              <td className="border px-4 py-2">
                {group.isPublic ? "‚úÖ" : "‚ùå"}
              </td>
              <td className="border px-4 py-2">
                <button
                  onClick={() => handleEdit(group.code)}
                  className="px-2 py-1 bg-yellow-500 text-white rounded mr-2"
                >
                  ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button
                  onClick={() => handleDelete(group.code)}
                  className="px-2 py-1 bg-red-500 text-white rounded mr-2"
                >
                  üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                </button>
                <button
                  onClick={() => handleForChildrenViewEdit(group.code)}
                  className="px-2 py-1 bg-green-500 text-white rounded"
                >
                  üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default CategoryGroupList;
